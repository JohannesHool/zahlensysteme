{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["conversionOptions","label","value","App","props","changeConversionHandler","event","state","input","setState","conversionSettings","inputDisabled","inputConverted","document","getElementById","changeInputHandler","readAsDec","target","convert","radix","conversion","parseInt","toString","replace","NaN","increase","newInput","decrease","multiply_2","multiply_10","divide_2","divide_10","getNonDecimalNumber","Container","Row","Col","lg","className","href","md","options","placeholder","onChange","this","id","type","disabled","Button","color","onClick","number","React","Component","Explanation","chiffreValues","res","i","length","Math","pow","style","borderColor","fontWeight","push","chiffreMultipliers","multiplier","totalValues","result","total","pop","multiplierSigns","equalSigns","console","log","undefined","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2ef2b6d5.chunk.js","sourcesContent":["import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Select from 'react-select';\nimport { Button } from 'reactstrap';\nimport './App.css';\n\nconst conversionOptions = [\n  { label: \"Dezimal     -> Binär\", value: [10, 2] },\n  { label: \"Binär       -> Dezimal\", value: [2, 10] },\n  { label: \"Dezimal     -> Oktal\", value: [10, 8] },\n  { label: \"Oktal       -> Dezimal\", value: [8, 10] },\n  { label: \"Dezimal     -> Hexadezimal\", value: [10, 16] },\n  { label: \"Hexadezimal -> Dezimal\", value: [16, 10] },\n];\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      conversionSettings: \"\",\n      input: \"\",\n      inputConverted: \"\",\n      inputDisabled: true\n    };\n  }\n\n  changeConversionHandler = (event) => {\n    let input = this.state.input;\n    this.setState({ conversionSettings: event.value, inputDisabled: false, inputConverted: 0, input: 0 });\n    document.getElementById(\"number-input\").value = 0;\n\n  }\n\n  changeInputHandler = (event) => {\n    this.setState(\n      {\n        input: this.readAsDec(event.target.value, this.state.conversionSettings[0]),\n        inputConverted: this.convert(this.readAsDec(event.target.value, this.state.conversionSettings[0]), this.state.conversionSettings[1])\n      }\n    );\n  }\n\n  readAsDec = (input, radix) => {\n    let conversion = parseInt(input, radix);\n\n    if (conversion.toString(radix).replace(/^0+/, '') === input.replace(/^0+/, '')) {\n      return conversion;\n    } else {\n      return NaN;\n    }\n  }\n\n  convert = (input, radix) => {\n    if (input === input) {\n      return input.toString(radix);;\n    } else {\n      return \"\";\n    }\n  }\n\n  increase = () => {\n    let newInput = this.state.input + 1;\n    this.setState({ input: newInput, inputConverted: this.convert(newInput, this.state.conversionSettings[1]) });\n    document.getElementById(\"number-input\").value = this.convert(newInput, this.state.conversionSettings[0]);\n  }\n\n  decrease = () => {\n    let newInput = this.state.input - 1;\n    this.setState({ input: newInput, inputConverted: this.convert(newInput, this.state.conversionSettings[1]) });\n    document.getElementById(\"number-input\").value = this.convert(newInput, this.state.conversionSettings[0]);\n  }\n\n  multiply_2 = () => {\n    let newInput = this.state.input * 2;\n    this.setState({ input: newInput, inputConverted: this.convert(newInput, this.state.conversionSettings[1]) });\n    document.getElementById(\"number-input\").value = this.convert(newInput, this.state.conversionSettings[0]);\n  }\n\n  multiply_10 = () => {\n    let newInput = this.state.input * 10;\n    this.setState({ input: newInput, inputConverted: this.convert(newInput, this.state.conversionSettings[1]) });\n    document.getElementById(\"number-input\").value = this.convert(newInput, this.state.conversionSettings[0]);\n  }\n\n  divide_2 = () => {\n    let newInput = this.state.input / 2;\n    this.setState({ input: newInput, inputConverted: this.convert(newInput, this.state.conversionSettings[1]) });\n    document.getElementById(\"number-input\").value = this.convert(newInput, this.state.conversionSettings[0]);\n  }\n\n  divide_10 = () => {\n    let newInput = this.state.input / 10;\n    this.setState({ input: newInput, inputConverted: this.convert(newInput, this.state.conversionSettings[1]) });\n    document.getElementById(\"number-input\").value = this.convert(newInput, this.state.conversionSettings[0]);\n  }\n\n  getNonDecimalNumber = () => {\n    if (this.state.conversionSettings[0] === 10) {\n      return [this.state.inputConverted, this.state.conversionSettings[1]];\n    } else {\n      return [this.convert(parseInt(this.state.inputConverted), this.state.conversionSettings[0]), this.state.conversionSettings[0]];\n    }\n  }\n\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col lg={12} className=\"center-bar\">\n            <div className=\"text-right\">Contact: <a href=\"mailto:hooljohannes@gmail.com\">Johannes Hool</a></div>\n            <div className=\"title-container\">\n              <h1>Zahlensysteme</h1>\n            </div>\n            <Row>\n              <Col md={4}>\n                <div className=\"title-container\">\n                  <h4>Umrechnung von ... zu ...</h4>\n                </div>\n                <Select options={conversionOptions} placeholder=\"Wähle Zahlensysteme\" onChange={this.changeConversionHandler} />\n              </Col>\n              <Col md={4}>\n                <div className=\"title-container\">\n                  <h4>Eingabe</h4>\n                </div>\n                <input id=\"number-input\" className=\"form-control text-center big-text\" type=\"text\" disabled={this.state.inputDisabled} onChange={this.changeInputHandler} />\n                <Button color=\"info\" className=\"button-with-space\" onClick={this.increase}>+1</Button>\n                <Button color=\"info\" className=\"button-with-space\" onClick={this.decrease}>-1</Button>\n                <Button color=\"info\" className=\"button-with-space\" onClick={this.multiply_2}>*2</Button>\n                <Button color=\"info\" className=\"button-with-space\" onClick={this.multiply_10}>*10</Button>\n                <Button color=\"info\" className=\"button-with-space\" onClick={this.divide_2}>/2</Button>\n                <Button color=\"info\" className=\"button-with-space\" onClick={this.divide_10}>/10</Button>\n              </Col>\n              <Col md={4}>\n                <div className=\"title-container\">\n                  <h4>Resultat</h4>\n                </div>\n                <div className=\"text-centered big-text\">\n                  <b>{this.state.inputConverted}</b>\n                </div>\n              </Col>\n            </Row>\n            <Explanation number={this.getNonDecimalNumber()[0]} radix={this.getNonDecimalNumber()[1]} />\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nclass Explanation extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  chiffreValues = (number) => {\n    let res = [];\n    for (let i = number.length - 1; i >= 0; i--) {\n      let multiplier = Math.pow(this.props.radix, number.length - 1 - i);\n      let value = parseInt(number[i], 16);\n      let style = { color: \"black\", borderColor: \"black\", fontWeight: \"bold\" };\n      if (value === 0) {\n        style[\"color\"] = \"grey\";\n        style[\"borderColor\"] = \"lightgrey\";\n        style[\"fontWeight\"] = \"normal\";\n      }\n      res.push(<div className=\"chiffre\" style={style}>{value}</div>);\n    }\n    return res;\n  }\n\n  chiffreMultipliers = (number) => {\n    let res = [];\n    for (let i = number.length - 1; i >= 0; i--) {\n      let multiplier = Math.pow(this.props.radix, number.length - 1 - i);\n      let value = parseInt(number[i], 16);\n      let style = { color: \"black\", borderColor: \"black\", fontWeight: \"bold\" };\n      if (value === 0) {\n        style[\"color\"] = \"grey\";\n        style[\"borderColor\"] = \"lightgrey\";\n        style[\"fontWeight\"] = \"normal\";\n      }\n      res.push(<div className=\"chiffre\" style={style}>{multiplier}</div>);\n    }\n    return res;\n  }\n\n  totalValues = (number) => {\n    let res = [];\n    for (let i = number.length - 1; i >= 0; i--) {\n      let multiplier = Math.pow(this.props.radix, number.length - 1 - i);\n      let value = parseInt(number[i], 16);\n      let style = { color: \"black\", fontWeight: \"bold\" };\n      if (value === 0) {\n        style[\"color\"] = \"grey\";\n        style[\"fontWeight\"] = \"normal\";\n      }\n      res.push(<div className=\"sign\" style={style}>{multiplier * value}</div>);\n    }\n    return res;\n  }\n\n  result = (number) => {\n    let res = [];\n    let total = 0;\n    for (let i = 0; i < number.length; i++) {\n      let multiplier = Math.pow(this.props.radix, number.length - 1 - i);\n      let value = parseInt(number[i], 16);\n      res.push(<span>{multiplier * value}</span>);\n      res.push(<span>+</span>);\n      total = total + (multiplier * value);\n    }\n\n    res.pop();\n    res.push(<span>=</span>);\n    res.push(<span style={{ fontWeight: \"bold\" }}>{total}</span>)\n    return (res);\n  }\n\n  convert = (number) => {\n    let total = 0;\n    for (let i = number.length - 1; i >= 0; i--) {\n      let multiplier = Math.pow(this.props.radix, number.length - 1 - i);\n      let value = parseInt(number[i], 16);\n      total = total + (multiplier * value);\n    }\n    return (total);\n  }\n\n  multiplierSigns = (number) => {\n    let res = [];\n    for (let i = number.length - 1; i >= 0; i--) {\n      let multiplier = Math.pow(this.props.radix, number.length - 1 - i);\n      res.push(<div className=\"sign\">*</div>);\n    }\n    return res;\n  }\n\n  equalSigns = (number) => {\n    let res = [];\n    for (let i = number.length - 1; i >= 0; i--) {\n      let multiplier = Math.pow(this.props.radix, number.length - 1 - i);\n      res.push(<div className=\"sign\">=</div>);\n    }\n    return res;\n  }\n  render() {\n    console.log(this.props.number, this.props.radix);\n    if (this.props.number === \"\" || this.props.number == undefined) {\n      return (<Col md={12}></Col>);\n\n    } else {\n      return (\n        <Col md={12}>\n          <Row>\n            <Col md={12}>\n              <div className=\"title-container-faded\"><h3>Herleitung</h3></div>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={1}></Col>\n            <Col md={11} className=\"text-center margin-bottom\">\n              Umrechnung von <b>{this.props.number}<sub>{this.props.radix}</sub></b> in <b>{this.convert(this.props.number)}<sub>10</sub></b>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={1}>\n              <b>Ziffernwerte</b> (Dezimal)\n            </Col>\n            <Col md={11}>\n              {this.chiffreValues(this.props.number)}\n            </Col>\n          </Row>\n          <Row>\n            <Col md={1}></Col>\n            <Col md={11}>\n              {this.multiplierSigns(this.props.number)}\n            </Col>\n          </Row>\n          <Row>\n            <Col md={1}>\n              <b>Stellenwerte</b> (Dezimal)\n            </Col>\n            <Col md={11}>\n              {this.chiffreMultipliers(this.props.number)}\n            </Col>\n          </Row>\n          <Row>\n            <Col md={1}></Col>\n            <Col md={11}>\n              {this.equalSigns(this.props.number)}\n            </Col>\n          </Row>\n          <Row>\n            <Col md={1}></Col>\n            <Col md={11}>\n              {this.totalValues(this.props.number)}\n            </Col>\n          </Row>\n          <Row>\n            <Col md={1}>\n              <div className=\"margin-top\">\n              <b>Resultat</b>\n              </div>\n            </Col>\n            <Col md={11} className=\"text-center margin-top\">\n              {this.result(this.props.number)}\n            </Col>\n          </Row>\n\n        </Col>\n      );\n    }\n\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}