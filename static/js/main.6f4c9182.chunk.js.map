{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["conversionOptions","label","value","App","props","changeConversionHandler","event","setState","conversionSettings","inputDisabled","inputConverted","input","document","getElementById","changeInputHandler","readAsDec","target","state","convert","radix","conversion","parseInt","toString","replace","NaN","increase","newInput","decrease","multiply_2","multiply_10","getNonDecimalNumber","Container","Row","Col","lg","className","href","md","options","placeholder","onChange","this","id","type","disabled","Button","color","onClick","number","React","Component","Explanation","chiffreValues","radixName","res","result","explainer","i","length","multiplier","Math","pow","style","borderColor","fontWeight","push","data-tip","data-for","maxFontSize","widthOnly","place","effect","unshift","marginTop","width","join","total","pop","console","log","undefined","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6f4c9182.chunk.js","sourcesContent":["import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Select from 'react-select';\nimport ScaleText from \"react-scale-text\";\nimport { Button } from 'reactstrap';\nimport ReactTooltip from 'react-tooltip';\nimport './App.css';\n\nconst conversionOptions = [\n  { label: \"Dezimal     → Dezimal\", value: [10, 10] },\n  { label: \"Dezimal     → Binär\", value: [10, 2] },\n  { label: \"Binär       → Dezimal\", value: [2, 10] },\n  { label: \"Dezimal     → Oktal\", value: [10, 8] },\n  { label: \"Oktal       → Dezimal\", value: [8, 10] },\n  { label: \"Dezimal     → Hexadezimal\", value: [10, 16] },\n  { label: \"Hexadezimal → Dezimal\", value: [16, 10] },\n];\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      conversionSettings: \"\",\n      input: \"\",\n      inputConverted: \"\",\n      inputDisabled: true\n    };\n  }\n\n  changeConversionHandler = (event) => {\n    this.setState({ conversionSettings: event.value, inputDisabled: false, inputConverted: 0, input: 0 });\n    document.getElementById(\"number-input\").value = 0;\n\n  }\n\n  changeInputHandler = (event) => {\n    this.setState(\n      {\n        input: this.readAsDec(event.target.value, this.state.conversionSettings[0]),\n        inputConverted: this.convert(this.readAsDec(event.target.value, this.state.conversionSettings[0]), this.state.conversionSettings[1])\n      }\n    );\n  }\n\n  readAsDec = (input, radix) => {\n    let conversion = parseInt(input, radix);\n\n    if (conversion.toString(radix).replace(/^0+/, '') === input.replace(/^0+/, '')) {\n      return conversion;\n    } else {\n      return NaN;\n    }\n  }\n\n  convert = (input, radix) => {\n    if (input === input) {\n      return input.toString(radix);;\n    } else {\n      return \"\";\n    }\n  }\n\n  increase = () => {\n    let newInput = this.state.input + 1;\n    this.setState({ input: newInput, inputConverted: this.convert(newInput, this.state.conversionSettings[1]) });\n    document.getElementById(\"number-input\").value = this.convert(newInput, this.state.conversionSettings[0]);\n  }\n\n  decrease = () => {\n    let newInput = this.state.input - 1;\n    this.setState({ input: newInput, inputConverted: this.convert(newInput, this.state.conversionSettings[1]) });\n    document.getElementById(\"number-input\").value = this.convert(newInput, this.state.conversionSettings[0]);\n  }\n\n  multiply_2 = () => {\n    let newInput = this.state.input * 2;\n    this.setState({ input: newInput, inputConverted: this.convert(newInput, this.state.conversionSettings[1]) });\n    document.getElementById(\"number-input\").value = this.convert(newInput, this.state.conversionSettings[0]);\n  }\n\n  multiply_10 = () => {\n    let newInput = this.state.input * 10;\n    this.setState({ input: newInput, inputConverted: this.convert(newInput, this.state.conversionSettings[1]) });\n    document.getElementById(\"number-input\").value = this.convert(newInput, this.state.conversionSettings[0]);\n  }\n\n  getNonDecimalNumber = () => {\n    if (this.state.conversionSettings[0] === 10) {\n      return [this.state.inputConverted, this.state.conversionSettings[1]];\n    } else {\n      return [this.convert(parseInt(this.state.inputConverted), this.state.conversionSettings[0]), this.state.conversionSettings[0]];\n    }\n  }\n\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col lg={12} className=\"center-bar\">\n            <div className=\"text-right\">Contact: <a href=\"mailto:hooljohannes@gmail.com\">Johannes Hool</a></div>\n            <div className=\"title-container\">\n              <h1>Zahlensysteme</h1>\n            </div>\n            <Row>\n              <Col md={4}>\n                <div className=\"title-container\">\n                  <h4>Umrechnung von ... zu ...</h4>\n                </div>\n                <Select options={conversionOptions} placeholder=\"Wähle Zahlensysteme\" onChange={this.changeConversionHandler} />\n              </Col>\n              <Col md={4}>\n                <div className=\"title-container\">\n                  <h4>Eingabe</h4>\n                </div>\n                <input id=\"number-input\" className=\"form-control text-center big-text\" type=\"text\" disabled={this.state.inputDisabled} onChange={this.changeInputHandler} />\n                <Button color=\"outline-success\" className=\"button-with-space\" onClick={this.multiply_10}>*10</Button>\n                <Button color=\"outline-success\" className=\"button-with-space\" onClick={this.multiply_2}>*2</Button>\n                <Button color=\"outline-success\" className=\"button-with-space\" onClick={this.decrease}>-1</Button>\n                <Button color=\"outline-success\" className=\"button-with-space\" onClick={this.increase}>+1</Button>\n              </Col>\n              <Col md={4}>\n                <div className=\"title-container\">\n                  <h4>Resultat</h4>\n                </div>\n                <div id=\"result-box\" className=\"text-centered big-text\">\n                  <b>{this.state.inputConverted}</b>\n                </div>\n              </Col>\n            </Row>\n            <Explanation number={this.getNonDecimalNumber()[0]} radix={this.getNonDecimalNumber()[1]} />\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nclass Explanation extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  chiffreValues = (number) => {\n    let radixName = \"Binär\";\n    if (this.props.radix === 8) {\n      radixName = \"Oktal\"\n    }\n    if (this.props.radix === 16) {\n      radixName = \"Hexadezimal\"\n    }\n    let res = [];\n    let result = 0;\n    let explainer = [];\n    for (let i = 0; i < number.length; i++) {\n      let multiplier = Math.pow(this.props.radix, number.length - 1 - i);\n      let value = parseInt(number[i], 16);\n      let style = { color: \"black\", borderColor: \"black\", fontWeight: \"bold\" };\n      result = result + value * multiplier;\n      if((value*multiplier) > 0){\n        explainer.push(value*multiplier);\n      }\n      if (value === 0) {\n        style[\"color\"] = \"grey\";\n        style[\"borderColor\"] = \"lightgrey\";\n        style[\"fontWeight\"] = \"normal\";\n      }\n      if (this.props.radix === 16) {\n        res.push(\n          <div>\n            <div className=\"chiffre-white\" style={{ fontWeight: \"bold\" }}>{number[i]}</div>\n            <div className=\"chiffre-dec\">{value}</div>\n            <div className=\"sign\">*</div>\n            <div className=\"chiffre\" style={style} data-tip data-for={\"tooltip_\" + i}><ScaleText maxFontSize={20} widthOnly={true} >{multiplier}\n            </ScaleText>\n              <ReactTooltip id={\"tooltip_\" + i} place=\"bottom\" type=\"success\" effect=\"solid\">\n                <p>{multiplier} = {this.props.radix}<sup>{number.length - i - 1}</sup></p>\n              </ReactTooltip>\n            </div>\n            <div className=\"sign\">=</div>\n            <div className=\"chiffre\" style={style} data-tip data-for={\"total_\" + i}><ScaleText maxFontSize={20} widthOnly={true}>{multiplier * value}</ScaleText>\n              <ReactTooltip id={\"total_\" + i} place=\"bottom\" type=\"success\" effect=\"solid\">\n                <p>{multiplier * value} = {value}*{multiplier}</p>\n              </ReactTooltip>\n            </div>\n\n          </div>\n        );\n        if (number.length > 1 && i < number.length - 1) {\n          res.push(\n            <div>\n              <div className=\"chiffre-white\" style={style}></div>\n              <div className=\"chiffre-dec\" style={style}></div>\n              <div className=\"chiffre-placeholder\"></div>\n              <div className=\"chiffre-placeholder\" style={style}></div>\n              <div className=\"chiffre-placeholder\"></div>\n              <div className=\"chiffre-placeholder\">+</div>\n            </div>\n          );\n        }\n        if (i === number.length - 1) {\n          res.push(\n            <div>\n              <div className=\"chiffre-placeholder\" style={style}></div>\n              <div className=\"chiffre-dec\" style={style}></div>\n              <div className=\"chiffre-placeholder\"></div>\n              <div className=\"chiffre-placeholder\" style={style}></div>\n              <div className=\"chiffre-placeholder\"></div>\n              <div className=\"chiffre-white\">=</div>\n            </div>\n          );\n        }\n      } else {\n        res.push(\n          <div>\n            <div className=\"chiffre-white\" style={{ fontWeight: \"bold\" }}>{number[i]}</div>\n            <div className=\"sign\">*</div>\n            <div className=\"chiffre\" style={style} data-tip data-for={\"tooltip_\" + i}><ScaleText maxFontSize={20} widthOnly={true} >{multiplier}\n            </ScaleText>\n              <ReactTooltip id={\"tooltip_\" + i} place=\"bottom\" type=\"success\" effect=\"solid\">\n                <p>{multiplier} = {this.props.radix}<sup>{number.length - i - 1}</sup></p>\n              </ReactTooltip>\n            </div>\n            <div className=\"sign\">=</div>\n            <div className=\"chiffre\" style={style} data-tip data-for={\"total_\" + i}><ScaleText maxFontSize={20} widthOnly={true}>{multiplier * value}</ScaleText>\n              <ReactTooltip id={\"total_\" + i} place=\"bottom\" type=\"success\" effect=\"solid\">\n                <p>{multiplier * value} = {value}*{multiplier}</p>\n              </ReactTooltip>\n            </div>\n\n          </div>\n        );\n        if (number.length > 1 && i < number.length - 1) {\n          res.push(\n            <div>\n              <div className=\"chiffre-white\" style={style}></div>\n              <div className=\"chiffre-placeholder\"></div>\n              <div className=\"chiffre-placeholder\" style={style}></div>\n              <div className=\"chiffre-placeholder\"></div>\n              <div className=\"chiffre-placeholder\">+</div>\n            </div>\n          );\n        }\n        if (i === number.length - 1) {\n          res.push(\n            <div>\n              <div className=\"chiffre-placeholder\" style={style}></div>\n              <div className=\"chiffre-placeholder\"></div>\n              <div className=\"chiffre-placeholder\" style={style}></div>\n              <div className=\"chiffre-placeholder\"></div>\n              <div className=\"chiffre-white\">=</div>\n            </div>\n          );\n        }\n      }\n    }\n    if (this.props.radix === 16) {\n      res.unshift(\n        <div>\n          <div className=\"row-name\"><b>Ziffernwerte ({radixName})</b></div>\n          <div className=\"row-name\" style={{ marginTop: \"40px\", color: \"lightgrey\" }}><b>Ziffernwerte (Dezimal)</b></div>\n          <div className=\"row-name\"></div>\n          <div className=\"row-name\"><b>Stellenwerte (Dezimal)</b></div>\n          <div className=\"row-name\"></div>\n          <div className=\"row-name\"><b>Resultat (Dezimal)</b></div>\n        </div>\n      )\n      res.push(\n        <div>\n          <div className=\"chiffre-placeholder\"></div>\n          <div className=\"chiffre-dec\"></div>\n          <div className=\"chiffre-placeholder\"></div>\n          <div className=\"chiffre-placeholder\"></div>\n          <div className=\"chiffre-placeholder\"></div>\n          <div className=\"chiffre-white\" style={{ width: \"150px\" }} data-tip data-for={\"explanation\"}><ScaleText maxFontSize={20} widthOnly={true}><b>{result}</b></ScaleText>\n            <ReactTooltip id={\"explanation\"} place=\"bottom\" type=\"success\" effect=\"solid\">\n              <p>{result} = {explainer.join(\" + \")}</p>\n            </ReactTooltip>\n          </div>\n        </div>\n      )\n    } else {\n      res.unshift(\n        <div>\n          <div className=\"row-name\"><b>Ziffernwerte ({radixName})</b></div>\n          <div className=\"row-name\"></div>\n          <div className=\"row-name\"><b>Stellenwerte (Dezimal)</b></div>\n          <div className=\"row-name\"></div>\n          <div className=\"row-name\"><b>Resultat (Dezimal)</b></div>\n        </div>\n      )\n      res.push(\n        <div>\n          <div className=\"chiffre-placeholder\"></div>\n          <div className=\"chiffre-placeholder\"></div>\n          <div className=\"chiffre-placeholder\"></div>\n          <div className=\"chiffre-placeholder\"></div>\n          <div className=\"chiffre-white\" style={{ width: \"150px\" }} data-tip data-for={\"explanation\"}><ScaleText maxFontSize={20} widthOnly={true}><b>{result}</b></ScaleText>\n            <ReactTooltip id={\"explanation\"} place=\"bottom\" type=\"success\" effect=\"solid\">\n              <p>{result} = {explainer.join(\" + \")}</p>\n            </ReactTooltip>\n          </div>\n        </div>\n      )\n    }\n\n\n\n    return res;\n  }\n\n  result = (number) => {\n    let res = [];\n    let total = 0;\n    for (let i = 0; i < number.length; i++) {\n      let multiplier = Math.pow(this.props.radix, number.length - 1 - i);\n      let value = parseInt(number[i], 16);\n      res.push(<span>{multiplier * value}</span>);\n      res.push(<span>+</span>);\n      total = total + (multiplier * value);\n    }\n\n    res.pop();\n    res.push(<span>=</span>);\n    res.push(<span style={{ fontWeight: \"bold\" }}>{total}</span>)\n    return (res);\n  }\n\n  convert = (number) => {\n    let total = 0;\n    for (let i = number.length - 1; i >= 0; i--) {\n      let multiplier = Math.pow(this.props.radix, number.length - 1 - i);\n      let value = parseInt(number[i], 16);\n      total = total + (multiplier * value);\n    }\n    return (total);\n  }\n\n  render() {\n    console.log(this.props.number, this.props.radix);\n    if (this.props.number === \"\" || this.props.number === undefined) {\n      return (<Col md={12}></Col>);\n\n    } else {\n      return (\n        <Col md={12}>\n          <Row>\n            <Col md={12}>\n              <div className=\"title-container-faded\"><h3>Herleitung</h3></div>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={1}></Col>\n            <Col md={11} className=\"text-center margin-bottom\">\n              <div data-tip data-for={\"radixe\"}>\n                <p >Umrechnung von <b>{this.props.number}<sub>{this.props.radix}</sub></b> in <b>{this.convert(this.props.number)}<sub>10</sub></b></p>\n                <ReactTooltip id={\"radixe\"} place=\"bottom\" type=\"success\" effect=\"solid\">\n              <p>Die tiefergestellte <b><sub>{this.props.radix}</sub></b> bedeutet, die Zahl ist im <b>{this.props.radix}er System</b></p>\n              <p>Die tiefergestellte <b><sub>10</sub> </b> bedeutet, die Zahl ist im <b>10er System</b></p>\n            </ReactTooltip>\n                </div>\n            </Col>\n          </Row>\n          <Row>\n            <div className=\"no-stack\">\n              {this.chiffreValues(this.props.number)}\n            </div>\n          </Row>\n        </Col>\n      );\n    }\n\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}